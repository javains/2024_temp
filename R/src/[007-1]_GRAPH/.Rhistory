(text <- gsub("<*>",
"",
text))
(text <- gsub("<?>",
"",
text))
doc <- getURL(url,
httpheader = c('Content-Type' = "application/xml",
'X-Naver-Client-Id' = Client_ID,
'X-Naver-Client-Secret' = Client_Secret))
# 블로그 내용에 대한 리스트 만들기
doc2 <- htmlParse(doc, encoding="UTF-8")
text <- xpathSApply(doc2, "//item/description", xmlValue)
text
(text <- gsub("<+[[:alpha:]]>+",
"",
text))
(text <- gsub("<+[[:punct:]][[:alpha:]]>+",
"",
text))
writeLines(text, "sample1.txt")
text2<-readLines("sample1.txt")
text2
# 단어 추출
nouns <- sapply(text2,
extractNoun,
USE.NAMES = F)
nouns
nouns <- unlist(nouns)
nouns
# 빈도수 ####
wordcount <- table(nouns)
wordcount
wordcloud2(wordcount,
shape = "star",
backgroundColor = "black")
# RMySQL 패키지 설치 및 호출
install.packages("RMySQL")
library(RMySQL)
#도커 ip   id pw
# DB 연결설정
con <- dbConnect(MySQL(),
user="root",
password="rootpwd",
host="192.168.99.100",
dbname="bigdata_db",
client.flag=CLIENT_MULTI_RESULTS)
# SQL구문 설정
sql <- "SELECT * from rclass_tb"
# 쿼리 요청
rows <- dbGetQuery(con, sql)
# 결과 확인
rows
library(RCurl)
library(XML)
library(KoNLP)
library(wordcloud2)
# 팔레트 지정
library(RColorBrewer)
Client_ID <- "QuXvRyP4NkIBzebrT_Hs"
Client_Secret <- "nuRjoOrM_H"
searchUrl <- "https://openapi.naver.com/v1/search/blog.xml"
query <- URLencode(iconv("4차산업","euc-kr","UTF-8"))
url <- paste(searchUrl, "?query=", query, "&display=100", sep="")
doc <- getURL(url,
httpheader = c('Content-Type' = "application/xml",
'X-Naver-Client-Id' = Client_ID,
'X-Naver-Client-Secret' = Client_Secret))
# 블로그 내용에 대한 리스트 만들기
doc2 <- htmlParse(doc, encoding="UTF-8")
text <- xpathSApply(doc2, "//item/description", xmlValue)
text
# html tag 제거 ####
(text <- gsub("^<*>$",
"",
text))
(text <- gsub("<+[[:alpha:]]>+",
"",
text))
(text <- gsub("<+[[:punct:]][[:alpha:]]>+",
"",
text))
writeLines(text, "sample1.txt")
text2<-readLines("sample1.txt")
text2
# 단어 추출
nouns <- sapply(text2,
extractNoun,
USE.NAMES = F)
nouns <- unlist(nouns)
# 빈도수 ####
wordcount <- table(nouns)
wordcloud2(wordcount,
shape = "star",
backgroundColor = "black")
# Oracle 패키지 설치 및 호출
install.packages("ora")
library(ora)
# Oracle 패키지 설치 및 호출
install.packages("ROracle")
library(ROracle)
# Oracle 패키지 설치 및 호출
install.packages("ora")
# 두개의 자료 비교 ####
# (고수준) + (저수준)
(TS1 <- c(round(runif(30) * 100)))  #정수 형태의 난수 30개 만들어 낸다 .
(TS2 <- c(round(runif(30) * 100)))
(TS1 <- sort(TS1, decreasing = FALSE))  #오름차순 정렬
(TS2 <- sort(TS2, decreasing = FALSE))
#두개의 변화량을 시각화
# (고수준)
plot(TS1,
type = "l")
# (저수준)
lines(TS2,
lty = "dashed",
col = "red")
# plot() 함수 옵션 ####
v1 <- seq(-10, 10, 1)
v2 <- v1 ^ 2
# 선, 점 지정 ####
plot(v1, v2, type = "p",
main = "Graph-1", sub = "점타입")
plot(v1, v2, type = "l",
main = "Graph-2", sub = "선타입")
# 선, 점 지정 ####
plot(v1, v2, type = "p",
main = "Graph-1", sub = "점타입")
plot(v1, v2, type = "l",
main = "Graph-2", sub = "선타입")
plot(v1, v2, type = "c",
main = "Graph-3", sub = "선 - 점")
plot(v1, v2, type = "b",
main = "Graph-4", sub = "선과 점")
plot(v1, v2, type = "o",
main = "Graph-5", sub = "선위에 점")
plot(v1, v2, type = "h",
main = "Graph-6", sub = "수직선")
plot(v1, v2, type = "s",
main = "Graph-7", sub = "계단형")
# 테두리 모양 ####
plot(v1, v2, type = "p", bty = "o")
plot(v1, v2, type = "p", bty = "7")
plot(v1, v2, type = "p", bty = "c")
plot(v1, v2, type = "p", bty = "u")
plot(v1, v2, type = "p", bty = "]")
# 색지정 ####
plot(v1, v2, type = "p", col = "blue")
plot(v1, v2, type = "p", bty = "l")
plot(v1, v2, type = "p", bty = "7")
plot(v1, v2, type = "p", bty = "c")
plot(v1, v2, type = "p", bty = "u")
plot(v1, v2, type = "p", bty = "]")
# 색지정 ####
plot(v1, v2, type = "p", col = "blue")
# 점모양 지정(0~25) ####
plot(v1, v2, type = "p", pch = 25)
plot(v1, v2, type = "p", pch = "$")
# 선모양 지정 ####
plot(v1, v2, type = "l", col = "red")
plot(v1, v2, type = "l", col = "red", lwd = 4, lty = 1)
plot(v1, v2, type = "l", col = "red", lwd = 4, lty = 2)
plot(v1, v2, type = "l", col = "red", lwd = 4, lty = 3)
plot(v1, v2, type = "l", col = "red", lwd = 4, lty = 4)
plot(v1, v2, type = "l", col = "red", lwd = 4, lty = 5)
# 점모양 지정(0~25) ####
plot(v1, v2, type = "p", pch = 25)
plot(v1, v2, type = "p", pch = 1)
plot(v1, v2, type = "p", pch = 3)
plot(v1, v2, type = "p", pch = "*")
plot(v1, v2, type = "l", col = "red", lwd = 4)
plot(v1, v2, type = "l", col = "red", lwd = 4, lty = 1)
plot(v1, v2, type = "l", col = "red", lwd = 4, lty = 2)
plot(v1, v2, type = "l", col = "red", lwd = 2)
plot(v1, v2, type = "l", col = "red", lwd = 4)
# pie() 그래프 출력 ####
#외부 패키지 필요   한가지 정보를 강하게 보이고 싶으면 pi chart
#pi chart 의 항목이 균등하면 => 막대 차트로 바꾸는게 더 좋다
#차트를 완성 한후 어떻게 전달할지가 스토리 텔링
install.packages("graphics")
install.packages("graphics")
install.packages("graphics")
install.packages("graphics")
install.packages("graphics")
library(graphics)
x <- c(9, 15, 20, 16)
label <- c("영업1팀",
"영업2팀",
"영업3팀",
"영업4팀")
pie(x,
labels = label,
main = "부서별 영업 실적")
#pi 그래프의 시작점  12시 방향
pie(x,
init.angle = 90,
labels = label,
main = "부서별 영업 실적")
pct <- round(x/sum(x) * 100)
label <- paste(label, pct)
label <- paste(label, "%", sep = " ")
pie(x,
init.angle = 90,
col = rainbow(length(x)),
labels = label,
main = "부서별 영업 실적")
# 3D 파일차트 ####
install.packages("plotrix")
library(plotrix)
pie3D(x,
labels = label,
explode = 0.1,
labelcex = 0.8,
main="부서별 영업 실적")
#x  y 축만 있슴
# 3D 그래프  교재에 없음
library(lattice)
#iris 내장 객체   붓꽃의 정보 R내장 데이터
colnames(iris)
cloud(Petal.Length~Sepal.Length +
Sepal.Width,
data = iris)
# plot3d()  다이나믹하게 처리
install.packages("rgl")
library(rgl)
# 왼쪽마우스 클릭 : 확대
# 오른쪽마우스 클릭 : 회전
plot3d(iris$Sepal.Length,
iris$Sepal.Width,
iris$Petal.Length,
xlab = "S.L",
ylab = "S.W",
zlab = "P.L",
Col = rainbow(2))
#시간의 흐름을 가지고 자료 처리  문제 발생  ?   factor(Date) 처리 필요 검토 필요
# 001-[시계열데이터라인] ####
# 2014/2015년도 매출정보
TS <- read.csv("data/ts.csv")
# 작업디렉토리 지정
getwd()
setwd("~/[008]_GGPLOT2")
library(ggplot2)
library(ggthemes)
library(scales)
# x축, y축 이름지정
ggplot(TS, aes(x = factor(Date),
y = Sales,
group = 1)) +
geom_line(colour = "orange1",
size = 1) +
geom_point(colour = "orangered2",
size = 4) +
xlab("년도") +
ylab("매출") +
ggtitle("월별매출") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# geom_point()-산점도 그리기 ####
DF <- read.csv("data/PII.csv")  #데이터 초기화
#시간의 흐름을 가지고 자료 처리  문제 발생  ?   factor(Date) 처리 필요 검토 필요
# 001-[시계열데이터라인] ####
# 2014/2015년도 매출정보
TS <- read.csv("data/ts.csv")
# x축, y축 이름지정
ggplot(TS, aes(x = factor(Date),
y = Sales,
group = 1)) +
geom_line(colour = "orange1",
size = 1) +
geom_point(colour = "orangered2",
size = 4) +
xlab("년도") +
ylab("매출") +
ggtitle("월별매출") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 작업디렉토리 지정
getwd()
setwd("~/[007-1]_GRAPH")
getwd()
# 001-[비정형데이터분석] ####
alert1 <- readLines("data/oracle.log")
alert1
# ORA-12345 형식만 선택
alert2 <- grep("^ORA-+",
alert1,
value = TRUE)
alert2
# ORA-12345 에서 숫자부분만 잘라냄
alert3 <- substr(alert2, 5, 9)
alert3
# 영어부분을 제거후 숫자만 남김
alert4 <- gsub("[A-z]", "", alert3)
head(unlist(alert4), 20)
# 파일로 중간결과 저장
write(unlist(alert4), "data2/alert_2.txt")
alert5 <- read.table("data2/alert_2.txt")
alert5
# 발생 빈도별 정렬
wordcount <- table(alert5)
head(sort(wordcount, decreasing = T), 10)
# 막대그래프출력-01
bp <- barplot(final,
main = "에러 코드-건별 출력",
col = rainbow(10),
cex.names = 0.7,
las = 2,
ylim = c(0,4000))
final <- head(sort(wordcount, decreasing = T),
10)
# 막대그래프출력-01
bp <- barplot(final,
main = "에러 코드-건별 출력",
col = rainbow(10),
cex.names = 0.7,
las = 2,
ylim = c(0,4000))
text(x = bp,
y = final * 1.05,
labels = paste(final, "건"),
col = "black",
cex = 0.7)
# 막대그래프출력-02
dev.new( )
bp <- barplot(final,
main = "에러 코드-비율별 출력",
col = rainbow(10),
cex.names = 0.7,
las = 2,
ylim = c(0,4000))
pct <- round(final/sum(final) * 100 , 1)
text(x = bp,
y = final*1.05,
labels = paste(pct, "%"),
col = "black",
cex = 0.8)
# 002-[비정형데이터분석] ####
# 30대 창업키워드 분석
# install.packages("KoNLP")
# install.packages("stringr")
library(KoNLP)
library(stringr)
data1 <- readLines("data/job30.txt")
data2 <- sapply(data1,
extractNoun,
USE.NAMES = F)
head(unlist(data2), 30)
data3 <- unlist(data2)
data3 <- str_replace_all(data3,
"[^[:alpha:]]",
"")
data3 <- gsub("프렌차이즈",
"프랜차이즈",
data3)
data3 <- gsub("음식", "요식업", data3)
data3 <- gsub("커피숍", "카페", data3)
# 제거하고 싶은 단어 목록
txt <- readLines("data/30gsub.txt")
cnt_txt <- length(txt)
cnt_txt
data3 <- gsub((txt[i]), "", data3)
# 제거목록 반복 작업
for( i in 1:cnt_txt) {
data3 <- gsub((txt[i]), "", data3)
}
# 두글자 이상만 선택
data3 <- Filter(function(x) {nchar(x) >= 2} , data3)
# 파일로 저장
write(unlist(data3), "data2/job_3.txt")
data4 <- read.table("data2/job_3.txt")
# 빈도수로 정렬
wordcount <- table(data4)
head(sort(wordcount, decreasing = T), 20)
# 상위 10개 선택
bchart <- head(sort(wordcount, decreasing=T), 10)
# 막대그래프 출력
bplot <- barplot(bchart,
main = "30대 창업키워드 분석",
col = rainbow(10),
cex.names = 0.7,
las = 2,
ylim = c(0, 80))
# 추가정보 출력
pct <- round(bchart/sum(bchart) * 100 , 1)
text(x = bplot,
y = bchart * 1.05,
labels = paste("(",pct,"%",")"),
col = "black",
cex = 0.7)
text(x = bplot,
y = bchart * 0.85,
labels = paste(bchart, "건"),
col = "black",
cex = 0.7)
# 003-[비정형데이터분석] ####
# 40대 창업키워드 분석
# install.packages("KoNLP")
# install.packages("stringr")
library(KoNLP)
library(stringr)
data1 <- readLines("data/job40.txt")
data2 <- sapply(data1,
extractNoun,
USE.NAMES = F)
head(unlist(data2), 30)
data3 <- unlist(data2)
data3 <- str_replace_all(data3,
"[^[:alpha:]]",
"")
data3 <- gsub("남자", "남성", data3)
txt <- readLines("data/40gsub.txt")
cnt_txt <- length(txt)
cnt_txt
for( i in 1:cnt_txt) {
data3 <- gsub((txt[i]), "", data3)
}
data3 <- Filter(function(x) {nchar(x) >= 2}, data3)
write(unlist(data3), "data2/job_4.txt")
data4 <- read.table("data2/job_4.txt")
wordcount <- table(data4)
head(sort(wordcount, decreasing = T), 20)
bchart <- head(sort(wordcount, decreasing=T),
10)
bplot <- barplot(bchart,
main = "40대 창업키워드 분석",
col = rainbow(10),
cex.names = 0.7,
las = 2,
ylim=c(0, 100))
pct <- round(bchart/sum(bchart) * 100 , 1)
text(x = bplot,
y = bchart * 1.05,
labels = paste("(",pct,"%",")"),
col = "black",
cex = 0.7)
text(x = bplot,
y = bchart * 0.85,
labels = paste(bchart,"건"),
col = "black",
cex = 0.7)
data1 <- readLines("data/job50.txt")
data2 <- sapply(data1,
extractNoun,
USE.NAMES = F)
head(unlist(data2), 30)
data3 <- unlist(data2)
data3 <- str_replace_all(data3,
"[^[:alpha:]]",
"")
data3 <- gsub("남자", "남성", data3)
data3 <- gsub("pc", "PC방", data3)
data3 <- gsub("PC", "PC방", data3)
data3 <- gsub("컴퓨터", "PC방", data3)
data3 <- gsub("피시방", "PC방", data3)
data3 <- gsub("PC방방", "PC방", data3)
txt <- readLines("data/50gsub.txt")
cnt_txt <- length(txt)
for( i in 1:cnt_txt) {
data3 <- gsub((txt[i]), "", data3)
}
data3 <- Filter(function(x) {nchar(x) >= 2}, data3)
write(unlist(data3), "data2/job_5.txt")
data4 <- read.table("data2/job_5.txt")
wordcount <- table(data4)
bchart <- head(sort(wordcount, decreasing = T), 10)
bplot <- barplot(bchart,
main = "50대 창업키워드 분석",
col = rainbow(10),
cex.names = 0.7,
las = 2,
ylim = c(0, 150))
pct <- round(bchart/sum(bchart) * 100 , 1)
text(x = bplot,
y = bchart * 1.05,
labels = paste("(",pct,"%",")"),
col = "black",
cex = 0.7)
text(x = bplot,
y = bchart * 0.85,
labels = paste(bchart,"건"),
col = "black",
cex = 0.7)
# 005-[정형데이터분석] ####
# http://www.hira.or.kr 접속
# 정보공개 -> 공데이터 개방
# -> 공공데이터 이용안내
# 보건의빅데이개방시스템
# -> 공공데이터 목록
# "시군구별 표시과목별 의원현황"으로
# 검색하여 파일 다운로드
# "시군구별 표시과목별 의원현황(분기별2009~2013).xls"
# 파일을 분석
data1 <- read.csv("data/Seoul_HSPT.csv",
header=TRUE)
data1
barplot(as.matrix(data1[1:9, 2:11]),
main=paste("서울시 주요 구별 과목별 병원현황-2013년",
"\n", "출처[국민건강보험공단]"),
ylab = "병원수",
beside = TRUE,
col = rainbow(8),
ylim = c(0,350))
abline(h = seq(0, 350, 10),
lty = 3,
lwd = 0.2)
name <- data1$표시과목
legend(75,
350,
name,
cex = 0.8,
fill = rainbow(8),
bg = "white")
